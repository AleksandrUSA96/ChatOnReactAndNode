{"version":3,"sources":["components/RoomList/roomList.module.css","SocketIo/socketIo.js","components/API/api.js","components/Entrance/Entrance.jsx","reducer.js","components/RoomList/User.jsx","components/RoomList/Room.jsx","components/Chat/Message.jsx","components/Chat/FormMessage.jsx","components/Chat/Chat.jsx","components/RoomList/RoomList.jsx","App.js","reportWebVitals.js","index.js","App.module.css","components/Chat/Chat.module.css","components/Entrance/Entrance.module.css"],"names":["module","exports","socket","io","instance","axios","baseURL","entranceAPI","info","post","socketAPI","emit","setRoomInfoHandler","on","rooms","setMessagesHandler","messages","setMessageHandler","message","Entrance","onEntrance","roomIdFromURL","useState","name","setName","roomId","setRoomId","isLoading","setIsLoading","isClicked","setIsClicked","history","useHistory","useEffect","a","push","className","Style","entrance__wrapper","type","placeholder","value","onChange","e","target","disabled","onClick","trim","state","action","isAuth","payload","roomsList","User","user","user__block","Room","room","usersVisible","setUsersVisible","room__wrapper","room__name","val","length","user__list__wrapper","map","index","button__wrapper","to","Message","style","id","alignSelf","display","flexDirection","alignItems","textAlign","text__message","text","message__info","message__sender","message__sent","moment","date","format","FormMessage","setText","isSending","setIsSending","messageInfo","form__message","onSubmit","event","preventDefault","textarea","cols","rows","button__send","Chat","messagesRef","useRef","current","scrollTo","chat__wrapper","ref","RoomList","rooms__wrapper","room__list__wrapper","room__list__header","App","useReducer","reducer","dispatch","useMemo","pathsName","document","location","pathname","split","basename","process","exact","from","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.62fdf61a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rooms__wrapper\":\"roomList_rooms__wrapper__2fbIP\",\"room__list__header\":\"roomList_room__list__header__Vm6zH\",\"room__list__wrapper\":\"roomList_room__list__wrapper__Wpk6H\",\"room__wrapper\":\"roomList_room__wrapper__60f20\",\"room__name\":\"roomList_room__name__23j0O\",\"user__list__wrapper\":\"roomList_user__list__wrapper__2X7zg\",\"opacity__in\":\"roomList_opacity__in__1a7jA\",\"height__in\":\"roomList_height__in__11s9U\",\"user__block\":\"roomList_user__block__i0R3N\",\"chat__wrapper\":\"roomList_chat__wrapper__2dv1B\",\"button__wrapper\":\"roomList_button__wrapper__Ux1Af\"};","import io from \"socket.io-client\";\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nexport default socket;","import * as axios from \"axios\";\r\nimport socket from \"../../SocketIo/socketIo\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://chat-on-react-and-node-backend.herokuapp.com/`,\r\n});\r\n\r\nexport const entranceAPI = {\r\n    async sendInformation(info) {\r\n        return await instance.post('entrance', info);\r\n    }\r\n}\r\n\r\nexport const socketAPI = {\r\n    sendMessage(info) {\r\n        socket.emit('MESSAGE', info);\r\n    },\r\n    setAuth(info) {\r\n        socket.emit('ROOM:AUTH', info);\r\n    },\r\n    setRooms(setRoomInfoHandler) {\r\n        socket.on('ROOM:SET_ROOMS', rooms => setRoomInfoHandler(rooms));\r\n    },\r\n    setMessages(setMessagesHandler) {\r\n        socket.on('ROOM:SET_MESSAGES', messages => setMessagesHandler(messages));\r\n    },\r\n    setMessage(setMessageHandler) {\r\n        socket.on('MESSAGE', message => setMessageHandler(message));\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {entranceAPI} from \"../API/api\";\r\nimport Style from \"./Entrance.module.css\"\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Entrance = ({onEntrance, roomIdFromURL}) => {\r\n    const [name, setName] = useState('');\r\n    const [roomId, setRoomId] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isClicked, setIsClicked] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (roomIdFromURL !== null) setRoomId(roomIdFromURL);\r\n        if (isClicked) {\r\n            (async () => {\r\n                setIsLoading(true);\r\n                const info = {\r\n                    name,\r\n                    roomId\r\n                };\r\n                //Send post request for create room.\r\n                await entranceAPI.sendInformation(info);\r\n                onEntrance(info);\r\n                history.push('/roomlist/' + roomId);\r\n            })();\r\n        }\r\n    }, [isClicked])\r\n\r\n    return (\r\n        <div className={Style.entrance__wrapper}>\r\n            <input name={'name'} type=\"text\" placeholder={`What's your name?`} value={name}\r\n                   onChange={e => setName(e.target.value)}/>\r\n            <input name={'room'} type=\"text\" placeholder={`What's a room name?`} value={roomId}\r\n                   onChange={e => setRoomId(e.target.value)}/>\r\n            <button disabled={isLoading}\r\n                    onClick={() => ((name.trim() !== '') && (roomId.trim() !== '')) && setIsClicked(true)}>{\r\n                isLoading ? 'Entry...' : 'Entrance'}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Entrance;","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'IS_AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                name: action.payload.name,\r\n                roomId: action.payload.roomId\r\n            };\r\n        case 'SET_ROOM_ID_FROM_URL':\r\n            return {\r\n                ...state,\r\n                roomIdFromURL: action.payload,\r\n            };\r\n        case 'SWITCH_TO_FALSE':\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            };\r\n        case 'SET_ROOMS':\r\n            return {\r\n                ...state,\r\n                roomsList: action.payload\r\n            };\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                messages: action.payload\r\n            };\r\n        case 'SET_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from \"react\";\r\nimport Style from \"./roomList.module.css\";\r\n\r\nconst User = ({user}) => {\r\n    return (\r\n        <li className={Style.user__block}>\r\n            {user}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User;","import React, {useState} from \"react\";\r\nimport User from \"./User\";\r\nimport Style from \"./roomList.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Room = ({room, onEntrance, name, roomId}) => {\r\n    const [usersVisible, setUsersVisible] = useState(false);\r\n    const clickHandler = () => {\r\n        usersVisible ? setUsersVisible(false) : setUsersVisible(true)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.room__wrapper}>\r\n            <h3 className={Style.room__name}>\r\n                {room.name} ({room.val.length})\r\n            </h3>\r\n            {\r\n                usersVisible && <ol className={Style.user__list__wrapper}>\r\n                    {room.val.map((user, index) => <User key={index}\r\n                                                             user={user}\r\n                    />)}\r\n                </ol>\r\n            }\r\n            <div className={Style.button__wrapper}>\r\n                <button onClick={clickHandler}>Users of rooms</button>\r\n                {roomId !== room.name ?\r\n                    <NavLink to={'/roomlist/' + room.name}>\r\n                        <button onClick={() => onEntrance({\r\n                            name: name,\r\n                            roomId: room.name\r\n                        })}>Join\r\n                        </button>\r\n                    </NavLink> : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Room;","import React from \"react\";\r\nimport socket from \"../../SocketIo/socketIo\";\r\nimport Style from \"./Chat.module.css\";\r\nimport moment from \"moment\";\r\n\r\nconst Message = ({message}) => {\r\n    const styleForMyMessage = {\r\n        alignSelf: 'flex-end',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        textAlign: 'right'\r\n    }\r\n\r\n    return (\r\n        <div style={socket.id === message[1] ? styleForMyMessage : {}} className={Style.message}>\r\n            <p className={Style.text__message}>{message[0].text}</p>\r\n            <div className={Style.message__info}>\r\n                <span className={Style.message__sender}>{message[0].user}</span>\r\n                <span\r\n                    //For more easily displaying I used MomentJs, but I'm not sure that i did it correct.\r\n                    //I work first time with date between server and client. Don't hate me. :D\r\n                    className={Style.message__sent}>{moment(message[0].date).format('DD.MMM HH:mm')}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {useEffect, useState} from \"react\";\r\nimport Style from \"./Chat.module.css\";\r\nimport moment from \"moment\";\r\nimport socket from \"../../SocketIo/socketIo\";\r\nimport {socketAPI} from \"../API/api\";\r\n\r\nconst FormMessage = ({state, setMessageHandler}) => {\r\n    const [text, setText] = useState('');\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let date = moment();\r\n        const messageInfo = {\r\n            user: state.name,\r\n            text: text,\r\n            date: date,\r\n        }\r\n        if (isSending) {\r\n            //Send socket for add info about message in current room.\r\n            socketAPI.sendMessage([messageInfo, state.roomId]);\r\n            //Set own message in the state for to display\r\n            setMessageHandler([messageInfo, socket.id]);\r\n            setText('');\r\n            setIsSending(false);\r\n        }\r\n    }, [isSending])\r\n\r\n    return (\r\n        <form className={Style.form__message} onSubmit={event => event.preventDefault()}>\r\n                <textarea className={Style.textarea} value={text} onChange={(e) => setText(e.target.value)} name=\"chat\"\r\n                          id=\"chat\" cols=\"100\" rows=\"5\">''</textarea>\r\n            <button className={Style.button__send} onClick={() => (text.trim() !== '') && setIsSending(true)}>Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormMessage;","import React, {useEffect, useRef} from \"react\";\r\nimport Style from \"./Chat.module.css\";\r\nimport Message from \"./Message\";\r\nimport FormMessage from \"./FormMessage\";\r\n\r\nconst Chat = ({state, setMessageHandler}) => {\r\n    const messagesRef = useRef(null);\r\n    useEffect(() => {\r\n        messagesRef.current.scrollTo(0, 999999);\r\n    }, [state.messages]);\r\n\r\n    return (\r\n        <div className={Style.chat__wrapper}>\r\n            <div ref={messagesRef} className={Style.messages}>\r\n                {state.messages.length !== 0 ? state.messages.map((message, index) => (<Message key={index} message={message} />)) : ''}\r\n            </div>\r\n            <FormMessage state={state} setMessageHandler={setMessageHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport Room from \"./Room\";\r\nimport Style from \"./roomList.module.css\";\r\nimport Chat from \"../Chat/Chat\";\r\n\r\nconst RoomList = ({state, onEntrance, setMessageHandler}) => {\r\n    return (\r\n        <div className={Style.rooms__wrapper}>\r\n            <div className={Style.room__list__wrapper}>\r\n                <h3 className={Style.room__list__header}>Room List</h3>\r\n                <hr/>\r\n                {state.roomsList.length && state.roomsList.map((room, index) => <Room key={index}\r\n                                                                                      room={room}\r\n                                                                                      onEntrance={onEntrance}\r\n                                                                                      name={state.name}\r\n                                                                                      roomId={state.roomId}\r\n                />)}\r\n            </div>\r\n            <Chat state={state} setMessageHandler={setMessageHandler}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomList;","import './App.module.css';\nimport Entrance from \"./components/Entrance/Entrance\";\nimport {useEffect, useMemo, useReducer} from \"react\";\nimport reducer from \"./reducer\";\nimport RoomList from \"./components/RoomList/RoomList\";\nimport Style from \"./App.module.css\";\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\nimport {socketAPI} from \"./components/API/api\";\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, {\n        isAuth: false,\n        name: null,\n        roomId: null,\n        roomIdFromURL: null,\n        messages: [],\n        roomsList: []\n    });\n\n    //It's necessary for save input room name value for the link to work\n    useMemo(() => {\n        const pathsName = document.location.pathname.split('/');\n        if (pathsName.length === 3) {\n            dispatch({\n                type: 'SET_ROOM_ID_FROM_URL',\n                payload: pathsName[2]\n            })\n        }\n    }, [])\n\n    //Function call from Entrance component when user filled in form and click button.\n    //Set field in the state: name (user name), roomId(id room/name room).\n    const onEntrance = (info) => {\n        dispatch({\n            type: 'IS_AUTH',\n            payload: info\n        })\n    }\n\n    //Set own message/incoming message in the state.\n    const setMessageHandler = (message) => {\n        dispatch({\n            type: 'SET_MESSAGE',\n            payload: message\n        })\n    };\n\n    //Set all information about room (room name, array of users).\n    const setRoomInfoHandler = (rooms) => {\n        dispatch({\n            type: 'SET_ROOMS',\n            payload: rooms\n        })\n    }\n\n    //Set all messages for current room in the state. Function call every time when user change room.\n    const setMessagesHandler = (messages) => {\n        dispatch({\n            type: 'SET_MESSAGES',\n            payload: messages\n        })\n    }\n\n\n    useEffect(() => {\n        //Send socket on server for create user\n        if (state.isAuth) socketAPI.setAuth([state.name, state.roomId]);\n        //Toggle state.isAuth on false. It's necessary for join a any room in a room list\n        dispatch({\n            type: 'SWITCH_TO_FALSE',\n        })\n    }, [state.isAuth]);\n\n    useEffect(() => {\n        socketAPI.setRooms(setRoomInfoHandler);\n        socketAPI.setMessages(setMessagesHandler);\n        socketAPI.setMessage(setMessageHandler);\n    }, []);\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className={Style.App}>\n                {state.name === null && <Redirect exact from='/' to='/entrance'/>}\n                {state.name !== null ? <Route path={'/roomlist'}\n                                              render={() => <RoomList onEntrance={onEntrance} setMessageHandler={setMessageHandler}\n                                                                      state={state}/>}/> :\n                    <Route path='/entrance'\n                           render={() => <Entrance onEntrance={onEntrance} roomIdFromURL={state.roomIdFromURL}/>}/>}\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1bsEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat__wrapper\":\"Chat_chat__wrapper__3zC5l\",\"messages\":\"Chat_messages__Ui-Ut\",\"message\":\"Chat_message__3lb-g\",\"text__message\":\"Chat_text__message__3oRV0\",\"message__info\":\"Chat_message__info__2NkqB\",\"message__sender\":\"Chat_message__sender__318ed\",\"message__sent\":\"Chat_message__sent__n0-mY\",\"form__message\":\"Chat_form__message__1GMuX\",\"textarea\":\"Chat_textarea__3-hJN\",\"button__send\":\"Chat_button__send__3BTaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entrance__wrapper\":\"Entrance_entrance__wrapper__2Smj2\"};"],"sourceRoot":""}